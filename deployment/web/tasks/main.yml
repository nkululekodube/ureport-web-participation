---
- name: include default step variables
  include_vars: ../../vars/main.yml

- name: Install openssl and libssl
  sudo_user: root
  apt: name={{ item }} update_cache=yes state=latest
  with_items:
    - openssl
    - libssl-dev
    - libssl-doc
  tags: packages

- name: Base package install
  sudo_user: root
  apt: name={{ item }} update_cache=yes force=yes state=installed
  with_items:
    - build-essential
    - git
    - python-dev
    - python-pip
    - python-pycurl
    - supervisor

  tags: packages

- name: Install virtualenv 
  sudo_user: root
  pip: name={{ item }}
  with_items:
    - virtualenv
  tags: packages

- name: Create the virtualenv
  sudo_user: root
  command: virtualenv {{virtual_env}} --no-site-packages
           creates={{virtual_env_activate}}

- name: Create the application log folder
  sudo_user: root
  file: path={{project_dir}}
        owner='{{remote_user}}'
        group='{{remote_user}}'
        state=directory

- name: Create the virtualenv postactivate script to set environment variables
  template: src=postactivate_template.j2
            dest={{virtual_env_postactivate}}
            owner='{{remote_user}}'
            group='{{remote_user}}'
            backup=yes

- name: Pull latest code from github
  sudo_user: root
  git: repo={{github_repo}} dest={{project_dir}} update=yes accept_hostkey=yes
  notify: reload application
  tags: 
    - git 
    - deploy

- name: Initialise log rotation for Supervisord
  template: src=supervisor_log.j2
            dest='/etc/logrotate.d/'{{application_name}}'-supervisor.log'
            owner='{{remote_user}}'
            group='{{remote_user}}'

- name: Install django application requirements in virtualenv
  sudo: yes 
  pip: virtualenv={{virtual_env}} requirements={{django_requirements}}
  tags:
    - requirements 

- name: Run makemigrations command
  sudo_user: '{{remote_user}}'
  sudo: yes
  shell: . {{virtual_env_activate}} && . {{virtual_env_postactivate}} && cd '{{project_dir}}' && python manage.py makemigrations --noinput
  when: run_django_syncdb
  tags: 
   - django 
   - syncdb

- name: Run migrate command
  sudo_user: '{{remote_user}}'
  shell: . {{virtual_env_activate}} && . {{virtual_env_postactivate}} && cd '{{project_dir}}' && python manage.py migrate --noinput
  when: run_django_migrations
  tags: 
    - django 
    - migrate

- name: Generate static django files for application
  shell: . {{virtual_env_activate}} && . {{virtual_env_postactivate}} && cd '{{project_dir}}' && python manage.py collectstatic --noinput
  when: run_django_collectstatic
  tags: 
    - django 
    - collectstatic 
    - deploy

- name: Ensure Nginx service is started
  service: name=nginx state=started enabled=yes

- name: Initialise log rotation for nginx
  template: src=nginx_log.j2
            dest='/etc/logrotate.d/{{application_name}}-nginx.log'
            owner={{remote_user}}
            group={{remote_user}}
  tags: backup


