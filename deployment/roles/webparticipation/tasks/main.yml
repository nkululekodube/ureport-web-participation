---

- name: Include default step variables
  include_vars: ../../../vars/{{instance}}.yml

- name: Install openssl and libssl
  sudo_user: root
  apt: name={{item}} update_cache=yes state=latest
  with_items:
    - openssl
    - libssl-dev
    - libssl-doc
    - libffi-dev
  tags: packages

- name: Base package install
  sudo_user: root
  apt: name={{item}} update_cache=yes force=yes state=installed
  with_items:
    - build-essential
    - git
    - python-dev
    - python-pip
    - python-pycurl
    - supervisor
    - uwsgi
  tags: packages

- name: Install virtualenv
  sudo_user: root
  pip: name={{item}}
  with_items:
    - virtualenv
  tags: packages

- name: Pull latest code from github
  sudo_user: root
  git: repo={{github_repo}} dest={{project_dir}} update=yes accept_hostkey=yes force=yes
  notify: reload application
  tags: git

- name: Create the virtualenv
  sudo_user: root
  command: virtualenv {{virtual_env}} --no-site-packages
           creates={{virtual_env_activate}}

- name: Create the virtualenv postactivate script to set environment variables
  sudo_user: root
  template: src=postactivate_template.j2
            dest={{virtual_env_postactivate}}
            owner='{{remote_user}}'
            group='{{remote_user}}'
            backup=yes

- name: Create the application folder
  sudo_user: root
  file: path={{project_dir}}
        owner='{{remote_user}}'
        group='{{remote_user}}'
        state=directory

- name: Initialise log rotation for Supervisord
  sudo_user: root
  template: src=supervisor_log.j2
            dest='/etc/logrotate.d/{{application_name}}-supervisor.log'
            owner='{{remote_user}}'
            group='{{remote_user}}'

- name: Generate configuration file for supervisor
  sudo_user: root
  template: src=supervisor_conf.j2
            dest=/etc/supervisor/conf.d/{{application_name}}.conf
            backup=yes


- name: Ensure uwsgi conf.d folder exists
  sudo_user: root
  file: path=/etc/uwsgi/sites/conf.d
        owner='{{remote_user}}'
        group='{{remote_user}}'
        state=directory

- name: Initialise application uwsgi configuration
  sudo_user: root
  template: src=uwsgi.j2
            dest=/etc/uwsgi/sites/conf.d/{{application_name}}.ini

- name: Install django application requirements in virtualenv
  sudo: yes
  sudo_user: root
  pip: virtualenv={{virtual_env}} requirements={{django_requirements}}
  tags:
    - requirements

- name: Install uwsgi
  sudo: yes
  sudo_user: root
  pip: virtualenv={{virtual_env}} name=uwsgi

- name: Run makemigrations command
  sudo_user: '{{remote_user}}'
  sudo: yes
  shell: . {{virtual_env_activate}} && . {{virtual_env_postactivate}} && cd '{{project_dir}}' && python manage.py makemigrations --noinput
  when: run_django_syncdb
  tags:
   - django
   - syncdb

- name: Run migrate command
  sudo_user: '{{remote_user}}'
  sudo: yes
  shell: . {{virtual_env_activate}} && . {{virtual_env_postactivate}} && cd '{{project_dir}}' && python manage.py migrate --noinput
  when: run_django_migrations
  tags:
    - django
    - migrate

- name: Generate static django files for application
  sudo_user: root
  sudo: yes
  shell: . {{virtual_env_activate}} && . {{virtual_env_postactivate}} && cd '{{project_dir}}' && python manage.py collectstatic --noinput
  when: run_django_collectstatic
  tags:
    - django
    - collectstatic
    - deploy
