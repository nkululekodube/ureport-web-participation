# import our default settings
from settings_common import *

ALLOWED_HOSTS = '*'

SESSION_COOKIE_NAME = "ureportsession"

DEBUG = False
TEMPLATE_DEBUG = DEBUG

# for dev, have everything time out after six hours so we don't hit the server so much
API_BOUNDARY_CACHE_TIME = 60 * 60 * 6
API_GROUP_CACHE_TIME = 60 * 60 * 6
API_RESULT_CACHE_TIME = 60 * 60 * 6

SITE_API_HOST = 'rapidpro.io'
API_ENDPOINT = 'https://api.rapidpro.io'
HOSTNAME = '{{server_name}}'

# we store files on S3 on prod boxes
# AWS_ACCESS_KEY_ID=os.environ.get('AWS_ACCESS_KEY_ID_UREPORT', 'MISSING_AWS_ACCESS_KEY_ID')
# AWS_SECRET_ACCESS_KEY=os.environ.get('AWS_SECRET_ACCESS_KEY_UREPORT', 'MISSING_AWS_SECRET_ACCESS_KEY')
# AWS_STORAGE_BUCKET_NAME='dl-ureport'
# DEFAULT_FILE_STORAGE = 'storages.backends.s3boto.S3BotoStorage'

# these two settings will cause our aws files to never expire
# see http://developer.yahoo.com/performance/rules.html#expires
# AWS_QUERYSTRING_AUTH = False
# AWS_HEADERS = {
#  'Expires': 'Wed, 1 Jan 2020 20:00:00 GMT',
#  'Cache-Control': 'max-age=86400',
# }
# List of finder classes that know how to find static files in
# various locations.
# STATICFILES_FINDERS = (
#     'django.contrib.staticfiles.finders.FileSystemFinder',
#     'django.contrib.staticfiles.finders.AppDirectoriesFinder',
#     'compressor.finders.CompressorFinder',
# )

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'ureport',
        'USER': 'ureport',
        'PASSWORD': 'nyaruka',
        'HOST': 'localhost',
        'PORT': '',
        'ATOMIC_REQUESTS': True,
        'OPTIONS': {
        }
    }
}

# # Faster schedules for staging server
CELERYBEAT_SCHEDULE = {
    "refresh_flows": {
        "task": "admins.refresh_org_flows",
        "schedule": timedelta(minutes=1),
        "relative": True,
    },
    "refresh_reporters": {
        "task": "admins.refresh_org_reporters",
        "schedule": timedelta(minutes=1),
        "relative": True,
    },
    "refresh_org_graphs_data": {
        "task": "admins.refresh_org_graphs_data",
        "schedule": timedelta(minutes=3),
        "relative": True,
    },
    "refresh_main_poll": {
        "task": "admins.refresh_main_poll",
        "schedule": timedelta(minutes=1),
        "relative": True,
    },
    "refresh_brick_polls": {
        "task": "admins.refresh_brick_polls",
        "schedule": timedelta(minutes=10),
        "relative": True,
    },
    "refresh_other_polls": {
        "task": "admins.refresh_other_polls",
        "schedule": timedelta(minutes=15),
        "relative": True,
    },
    "rebuild_boundaries": {
        "task": "orgs.build_boundaries",
        "schedule": timedelta(minutes=20),
        "relative": True,
    },
}
